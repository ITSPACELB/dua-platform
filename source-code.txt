

========== app\page.js ==========
import DuaPlatform from '../components/DuaPlatform'

export default function Home() {
  return <DuaPlatform />
}

========== app\layout.js ==========
import './globals.css'

export const metadata = {
  title: 'منصة الدعاء الجماعي',
  description: 'منصة تجمع المؤمنين من كل أنحاء العالم للدعاء المشترك',
  manifest: '/manifest.json',
  appleWebApp: {
    capable: true,
    statusBarStyle: 'default',
    title: 'منصة الدعاء الجماعي',
  },
  formatDetection: {
    telephone: false,
  },
}

// هذا هو الجديد - منفصل عن metadata
export const viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  themeColor: '#16a34a',
}

export default function RootLayout({ children }) {
  return (
    <html lang="ar" dir="rtl">
      <head>
        <link rel="manifest" href="/manifest.json" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <meta name="apple-mobile-web-app-title" content="منصة الدعاء الجماعي" />
        <link rel="apple-touch-icon" href="/icon-192.png" />
      </head>
      <body className="antialiased">
        {children}
      </body>
    </html>
  )
}

========== components\DuaPlatform.js ==========
'use client'
import React, { useState } from 'react';
import { Users, Heart, Send, Share2, Menu, Edit2, X, TrendingUp, Award, HelpCircle, Mail } from 'lucide-react';

// رسائل تشجيعية (30 رسالة)
const encouragingMessages = [
  '"وَقَالَ رَبُّكُمُ ادْعُونِي أَسْتَجِبْ لَكُمْ"\nدعاؤك مستجاب بإذن الله إن شاء الله',
  'الملائكة تدعو لك بمثل ما تدعو لأخيك\n"آمين، ولك بمثل" إن شاء الله',
  'قد يكون دعاؤك الآن سبب فرج إنسان\nلا تستهن بقوة كلماتك',
  '"الدُّعَاءُ هُوَ الْعِبَادَةُ"\nأنت تعبد الله الآن',
  'تذكر محنتك... كيف احتجت للدعاء؟\nالآن دورك أن تكون سبب فرج إن شاء الله',
  '"مَا يَلْفِظُ مِن قَوْلٍ إِلَّا لَدَيْهِ رَقِيبٌ عَتِيدٌ"\nالله يسمع دعاءك الآن',
  'دعاء واحد صادق خير من ألف دعاء سريع\nخذ وقتك... ادعُ من قلبك',
  'غداً قد تكون أنت من يحتاج الدعاء\nادعُ للآخرين كما تحب أن يُدعى لك',
  '"وَإِذَا سَأَلَكَ عِبَادِي عَنِّي فَإِنِّي قَرِيبٌ"\nالله قريب... يسمعك الآن إن شاء الله',
  'الدعاء يغير القدر بإذن الله\nكلماتك الآن قد تغير حياة إنسان',
  '"فَاذْكُرُونِي أَذْكُرْكُمْ"\nاذكر الله بالدعاء، يذكرك بالاستجابة إن شاء الله',
  'حين تدعو لأخيك بظهر الغيب\nملك موكل يقول: "آمين، ولك بمثل"',
  'ربما أنت المستجاب الدعوة إن شاء الله\nدعاؤك قد لا يُرد',
  '"إِنَّ اللَّهَ كَانَ سَمِيعًا بَصِيرًا"\nيسمعك... يراك... يستجيب لك إن شاء الله',
  'كل دعوة تخرج من قلبك\nتعود إليك خيراً بإذن الله',
  'الدعاء سلاح المؤمن\nوأنت تحمل هذا السلاح الآن',
  'قد يكون هذا الدعاء\nهو المفتاح لباب مغلق في حياتك إن شاء الله',
  'الدعاء عبادة بلا جهد\nفقط كلمات من قلبك',
  '"لَا تَقْنَطُوا مِن رَّحْمَةِ اللَّهِ"\nادعُ ولا تيأس',
  'أنت الآن تشارك في تغيير حياة إنسان\nما أعظم هذا!',
  'الدعاء للآخرين يفتح أبواب السماء لك إن شاء الله\nادعُ... واستبشر',
  'كل حرف تنطقه في الدعاء\nحسنة عند الله',
  '"وَهُوَ مَعَكُمْ أَيْنَ مَا كُنتُمْ"\nالله معك الآن... يسمعك',
  'الدعاء أقرب طريق إلى الله\nوأنت الآن في هذا الطريق',
  'لو علم الناس قوة الدعاء\nلما توقفوا عنه',
  'دعاؤك الآن قد يكون سبب فرج\nبعد دقائق... أو سنوات... بإذن الله',
  '"إِنَّ رَبِّي لَسَمِيعُ الدُّعَاءِ"\nربك يسمعك الآن',
  'الدعاء للغير بظهر الغيب\nمن أعظم القربات',
  'الدعاء يرفع البلاء ويدفع القضاء\nبإذن الله تعالى',
  '"وَإِنَّ رَبَّكَ لَذُو مَغْفِرَةٍ لِّلنَّاسِ"\nالله غفور رحيم... فادعُه'
];

// مستويات الإنجازات
const achievements = [
  { count: 10, title: '10 دعوات صادقة ترفع إلى السماء إن شاء الله', icon: '🌟' },
  { count: 25, title: '25 ملَك يستغفرون لك إن شاء الله', icon: '✨' },
  { count: 50, title: '50 ملَك يدعون لك ولكل ما يتمناه قلبك إن شاء الله', icon: '💫' },
  { count: 100, title: '100 باب من أبواب الجنة تفتح لك إن شاء الله', icon: '🚪' },
  { count: 365, title: 'دعاء كل يوم - بشرى لك بالخير إن شاء الله', icon: '📅' },
  { count: 1000, title: 'ألف دعاء = ألف فرج بإذن الله', icon: '🎯' }
];

const DuaPlatform = () => {
  const [currentPage, setCurrentPage] = useState('landing');
  const [showMenu, setShowMenu] = useState(false);
  const [user, setUser] = useState(null);
  const [formData, setFormData] = useState({
    fullName: '',
    motherName: '',
    showFullName: true,
    city: ''
  });
  const [requests, setRequests] = useState([
    {
      id: 1,
      userName: 'أحمد بن سارة',
      type: 'need',
      timestamp: new Date(Date.now() - 5 * 60000),
      prayerCount: 12,
      status: 'active'
    },
    {
      id: 2,
      userName: 'ماريا بنت كاثرين',
      type: 'need',
      timestamp: new Date(Date.now() - 15 * 60000),
      prayerCount: 8,
      status: 'active'
    },
    {
      id: 3,
      deceasedName: 'يوسف بن مريم',
      relation: 'أب',
      type: 'deceased',
      timestamp: new Date(Date.now() - 20 * 60000),
      prayerCount: 15,
      status: 'active'
    }
  ]);
  const [blessings] = useState([
    { name: 'محمد بن خديجة', count: 45 },
    { name: 'سارة بنت مريم', count: 32 },
    { name: 'علي بن فاطمة', count: 28 }
  ]);
  const [showDeceasedForm, setShowDeceasedForm] = useState(false);
  const [deceasedForm, setDeceasedForm] = useState({
    fullName: '',
    motherName: '',
    relation: ''
  });
  const [userPrayerCount] = useState(47);
  const [totalUsers] = useState(12847);
  const [showPrayingFor, setShowPrayingFor] = useState(null);
  const [prayingTimer, setPrayingTimer] = useState(0);
  const [contactMessage, setContactMessage] = useState('');
  const [randomMessage] = useState(encouragingMessages[Math.floor(Math.random() * encouragingMessages.length)]);

  const getTimeAgo = (timestamp) => {
    const mins = Math.floor((Date.now() - timestamp) / 60000);
    if (mins < 1) return 'الآن';
    if (mins === 1) return 'منذ دقيقة';
    if (mins < 60) return `منذ ${mins} دقيقة`;
    const hours = Math.floor(mins / 60);
    if (hours === 1) return 'منذ ساعة';
    if (hours < 24) return `منذ ${hours} ساعة`;
    const days = Math.floor(hours / 24);
    return `منذ ${days} يوم`;
  };

  const handleRegister = () => {
    if (!formData.fullName || !formData.motherName) {
      alert('الرجاء إدخال الاسم الكامل واسم الأم');
      return;
    }
    
    const newUser = {
      ...formData,
      id: Date.now(),
      displayName: formData.showFullName 
        ? `${formData.fullName}${formData.city ? ` (${formData.city})` : ''}`
        : `${formData.fullName.split(' ')[0]}...`
    };
    
    setUser(newUser);
    setCurrentPage('home');
  };

  const handleRequestPrayer = () => {
    const newRequest = {
      id: Date.now(),
      userName: user.displayName,
      userId: user.id,
      type: 'need',
      timestamp: new Date(),
      prayerCount: 0,
      status: 'active'
    };
    setRequests([newRequest, ...requests]);
    alert('تم إرسال طلبك! سيصل إشعار للمؤمنين خلال 30 دقيقة إن شاء الله');
  };

  const handleDeceasedPrayer = () => {
    if (!deceasedForm.fullName || !deceasedForm.motherName) {
      alert('الرجاء إدخال الاسم الكامل واسم الأم للمتوفى');
      return;
    }
    
    const newRequest = {
      id: Date.now(),
      deceasedName: deceasedForm.fullName,
      motherName: deceasedForm.motherName,
      relation: deceasedForm.relation,
      requestedBy: user.displayName,
      type: 'deceased',
      timestamp: new Date(),
      prayerCount: 0,
      status: 'active'
    };
    setRequests([newRequest, ...requests]);
    setShowDeceasedForm(false);
    setDeceasedForm({ fullName: '', motherName: '', relation: '' });
    alert('تم إرسال طلب الدعاء للمتوفى إن شاء الله');
  };

  const handleStartPraying = (request) => {
    setShowPrayingFor(request);
    setPrayingTimer(3);
    const interval = setInterval(() => {
      setPrayingTimer(prev => {
        if (prev <= 1) {
          clearInterval(interval);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
  };

  const handleCompletePrayer = (requestId) => {
    setRequests(requests.map(req => 
      req.id === requestId 
        ? { ...req, prayerCount: req.prayerCount + 1, prayed: true }
        : req
    ));
    setShowPrayingFor(null);
    setPrayingTimer(0);
  };

  const handleSendMessage = () => {
    if (!contactMessage.trim()) {
      alert('الرجاء كتابة رسالة');
      return;
    }
    // في التطبيق الحقيقي، سيتم إرسال البريد الإلكتروني إلى haydar.cd@gmail.com
    alert('تم إرسال رسالتك بنجاح! سنرد عليك قريباً إن شاء الله');
    setContactMessage('');
  };

  const getNextAchievement = () => {
    return achievements.find(a => a.count > userPrayerCount) || achievements[achievements.length - 1];
  };

  // شريط الزخرفة الإسلامية
  const IslamicBanner = () => (
    <div className="h-20 bg-gradient-to-r from-emerald-700 via-emerald-600 to-emerald-700 relative overflow-hidden">
      <div className="absolute inset-0 opacity-20">
        <div className="h-full w-full" style={{
          backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 10px, rgba(255,255,255,0.1) 10px, rgba(255,255,255,0.1) 20px)`,
        }}></div>
      </div>
      <div className="absolute inset-0 flex items-center justify-center">
        <div className="text-center">
          <div className="text-amber-200 text-xs mb-1 opacity-75">مساحة إعلانية</div>
          <div className="text-white text-sm font-arabic">✦ ✦ ✦</div>
        </div>
      </div>
    </div>
  );

  // صفحة الهبوط
  if (currentPage === 'landing') {
    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="flex-1 flex items-center justify-center p-4">
          <div className="max-w-md w-full bg-white rounded-lg shadow-sm border border-stone-200 p-8 text-center">
            <div className="mb-8">
              <div className="w-20 h-20 bg-emerald-600 rounded-full mx-auto flex items-center justify-center mb-6">
                <Users className="w-10 h-10 text-white" />
              </div>
              <h1 className="text-2xl font-semibold text-stone-800 mb-6">
                منصة الدعاء الجماعي
              </h1>
              
              <div className="bg-amber-50 border border-amber-200 rounded-lg p-5 mb-6">
                <p className="text-stone-700 leading-relaxed text-base" style={{fontFamily: 'Traditional Arabic, serif'}}>
                  ﴿ وَإِذَا سَأَلَكَ عِبَادِي عَنِّي فَإِنِّي قَرِيبٌ أُجِيبُ دَعْوَةَ الدَّاعِ إِذَا دَعَانِ ﴾
                </p>
              </div>
              
              <p className="text-stone-600 text-base leading-relaxed mb-2">
                دعاء واحد قد يغير حياة إنسان
              </p>
              <p className="text-stone-600 text-base leading-relaxed">
                وقد يغير حياتك إن شاء الله
              </p>
            </div>

            <div className="mb-6 p-4 bg-emerald-50 border border-emerald-200 rounded-lg">
              <p className="text-emerald-700 font-semibold text-lg">
                🌍 انضم إلى {totalUsers.toLocaleString()} مؤمن
              </p>
              <p className="text-emerald-600 text-sm">من حول العالم</p>
            </div>

            <button
              onClick={() => setCurrentPage('register')}
              className="w-full bg-emerald-600 hover:bg-emerald-700 text-white py-3 px-6 rounded-lg font-medium transition-colors"
            >
              ابدأ الآن إن شاء الله
            </button>
          </div>
        </div>
      </div>
    );
  }

  // صفحة التسجيل
  if (currentPage === 'register') {
    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="flex-1 flex items-center justify-center p-4">
          <div className="max-w-md w-full bg-white rounded-lg shadow-sm border border-stone-200 p-8">
            <h2 className="text-xl font-semibold text-stone-800 mb-6 text-center">
              معلوماتك للدعاء
            </h2>
            
            <div className="space-y-5">
              <div>
                <label className="block text-stone-700 font-medium mb-2 text-sm">
                  اسمك الكامل <span className="text-red-600">*</span>
                </label>
                <input
                  type="text"
                  value={formData.fullName}
                  onChange={(e) => setFormData({...formData, fullName: e.target.value})}
                  placeholder="محمد أحمد العلي"
                  className="w-full px-4 py-2.5 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none transition-colors"
                />
              </div>
              
              <div>
                <label className="block text-stone-700 font-medium mb-2 text-sm">
                  اسم والدتك <span className="text-red-600">*</span>
                </label>
                <input
                  type="text"
                  value={formData.motherName}
                  onChange={(e) => setFormData({...formData, motherName: e.target.value})}
                  placeholder="فاطمة"
                  className="w-full px-4 py-2.5 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none transition-colors"
                />
              </div>
              
              <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
                <p className="text-sm text-stone-700 leading-relaxed">
                  الدعاء بالاسم واسم الأم له قوة روحانية خاصة في كل الأديان
                </p>
              </div>
              
              <div>
                <label className="block text-stone-700 font-medium mb-2 text-sm">
                  مدينتك (للتمييز إن لزم)
                </label>
                <input
                  type="text"
                  value={formData.city}
                  onChange={(e) => setFormData({...formData, city: e.target.value})}
                  placeholder="القاهرة"
                  className="w-full px-4 py-2.5 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none transition-colors"
                />
              </div>
              
              <label className="flex items-start gap-3 cursor-pointer">
                <input
                  type="checkbox"
                  checked={formData.showFullName}
                  onChange={(e) => setFormData({...formData, showFullName: e.target.checked})}
                  className="mt-1 w-4 h-4 text-emerald-600 border-stone-300 rounded focus:ring-emerald-500"
                />
                <span className="text-stone-700 text-sm">
                  أوافق على إظهار اسمي كاملاً للمؤمنين الذين سيدعون لي
                </span>
              </label>
            </div>

            <button
              onClick={handleRegister}
              className="w-full mt-6 bg-emerald-600 hover:bg-emerald-700 text-white py-2.5 rounded-lg font-medium transition-colors"
            >
              تسجيل ومتابعة إن شاء الله
            </button>
            
            <button
              onClick={() => setCurrentPage('landing')}
              className="w-full mt-3 text-stone-600 py-2 hover:text-stone-800 transition-colors"
            >
              رجوع
            </button>
          </div>
        </div>
      </div>
    );
  }

  // صفحة من نحن
  if (currentPage === 'about') {
    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="bg-white border-b border-stone-200">
          <div className="max-w-2xl mx-auto px-4 py-4 flex items-center justify-between">
            <button onClick={() => setCurrentPage('home')} className="text-stone-600 hover:text-emerald-600">
              ← رجوع
            </button>
            <h1 className="text-lg font-semibold text-stone-800">من نحن</h1>
            <div className="w-8"></div>
          </div>
        </div>
        <div className="flex-1 p-4">
          <div className="max-w-2xl mx-auto bg-white rounded-lg border border-stone-200 p-8">
            <div className="text-center mb-6">
              <div className="text-4xl mb-4">💚</div>
              <h2 className="text-2xl font-semibold text-stone-800 mb-6">من نحن</h2>
            </div>
            
            <div className="space-y-4 text-stone-700 leading-relaxed">
              <p>ذات يوم، مررت بمحنة صعبة...</p>
              
              <p>كل ما كنت أحتاجه هو دعوة صادقة من قلب مؤمن</p>
              
              <p>الدعاء غيّر حياتي بإذن الله، وأيقنت أن الله يريدنا أن ندعوه وأن ندعو لبعضنا البعض</p>
              
              <div className="bg-amber-50 border border-amber-200 rounded-lg p-5 my-6">
                <p className="text-center" style={{fontFamily: 'Traditional Arabic, serif'}}>
                  ﴿ ادْعُونِي أَسْتَجِبْ لَكُمْ ﴾
                </p>
              </div>
              
              <p>الدعاء يغير مسارات القدر بإذن الله، وقد يكون دعاؤك سبب فرج إنسان</p>
              
              <p>أتمنى أن تتغير حياة الجميع للأحسن، بإذن الله 🤲</p>
            </div>

            <div className="mt-8 pt-8 border-t border-stone-200">
              <h3 className="text-lg font-semibold text-stone-800 mb-4 flex items-center gap-2">
                <Mail className="w-5 h-5" />
                تواصل معنا
              </h3>
              
              <textarea
                value={contactMessage}
                onChange={(e) => setContactMessage(e.target.value)}
                placeholder="اكتب رسالتك هنا..."
                rows="4"
                className="w-full px-4 py-3 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none resize-none"
              />
              
              <button
                onClick={handleSendMessage}
                className="w-full mt-4 bg-emerald-600 hover:bg-emerald-700 text-white py-2.5 rounded-lg font-medium transition-colors"
              >
                إرسال الرسالة إن شاء الله
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // صفحة الإحصائيات
  if (currentPage === 'stats') {
    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="bg-white border-b border-stone-200">
          <div className="max-w-2xl mx-auto px-4 py-4 flex items-center justify-between">
            <button onClick={() => setCurrentPage('home')} className="text-stone-600 hover:text-emerald-600">
              ← رجوع
            </button>
            <h1 className="text-lg font-semibold text-stone-800">إحصائياتك</h1>
            <div className="w-8"></div>
          </div>
        </div>
        <div className="flex-1 p-4">
          <div className="max-w-2xl mx-auto space-y-4">
            <div className="bg-white rounded-lg border border-stone-200 p-6 text-center">
              <div className="text-5xl font-bold text-emerald-600 mb-2">{userPrayerCount}</div>
              <p className="text-stone-600">دعاء هذا الشهر</p>
              <p className="text-sm text-emerald-600 mt-2">ماشاء الله تبارك الله</p>
            </div>

            <div className="bg-white rounded-lg border border-stone-200 p-6">
              <h3 className="font-semibold text-stone-800 mb-4">إحصائيات عامة</h3>
              <div className="space-y-3">
                <div className="flex justify-between items-center p-3 bg-stone-50 rounded-lg">
                  <span className="text-stone-600">إجمالي دعواتك</span>
                  <span className="font-semibold text-emerald-600">{userPrayerCount}</span>
                </div>
                <div className="flex justify-between items-center p-3 bg-stone-50 rounded-lg">
                  <span className="text-stone-600">دعا لك</span>
                  <span className="font-semibold text-emerald-600">24 مؤمن</span>
                </div>
                <div className="flex justify-between items-center p-3 bg-stone-50 rounded-lg">
                  <span className="text-stone-600">طلبات استُجيبت</span>
                  <span className="font-semibold text-amber-600">3</span>
                </div>
              </div>
            </div>

            <div className="bg-gradient-to-br from-emerald-50 to-amber-50 rounded-lg border border-emerald-200 p-6">
              <h3 className="font-semibold text-stone-800 mb-3 text-center">أثرك في المنصة</h3>
              <p className="text-sm text-stone-600 text-center mb-4">
                دعواتك ساهمت في راحة {userPrayerCount} قلب إن شاء الله
              </p>
              <div className="text-center text-3xl">💚</div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // صفحة الإنجازات
  if (currentPage === 'achievements') {
    const nextAchievement = getNextAchievement();
    const remaining = nextAchievement.count - userPrayerCount;
    const progress = (userPrayerCount / nextAchievement.count) * 100;

    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="bg-white border-b border-stone-200">
          <div className="max-w-2xl mx-auto px-4 py-4 flex items-center justify-between">
            <button onClick={() => setCurrentPage('home')} className="text-stone-600 hover:text-emerald-600">
              ← رجوع
            </button>
            <h1 className="text-lg font-semibold text-stone-800">إنجازاتك</h1>
            <div className="w-8"></div>
          </div>
        </div>
        <div className="flex-1 p-4">
          <div className="max-w-2xl mx-auto space-y-4">
            {/* العداد التحفيزي */}
            <div className="bg-gradient-to-br from-emerald-50 to-emerald-100 rounded-lg border border-emerald-200 p-6">
              <div className="text-center mb-4">
                <div className="text-4xl font-bold text-emerald-700 mb-2">{userPrayerCount}</div>
                <p className="text-stone-600">دعاء هذا الشهر</p>
              </div>

              <div className="mb-4">
                <div className="w-full bg-emerald-200 rounded-full h-3 overflow-hidden">
                  <div 
                    className="bg-emerald-600 h-full transition-all duration-500"
                    style={{width: `${Math.min(progress, 100)}%`}}
                  ></div>
                </div>
              </div>

              <div className="text-center">
                <p className="text-sm text-stone-600 mb-2">
                  باقي <span className="font-bold text-emerald-700">{remaining}</span> {remaining === 1 ? 'دعاء' : 'دعوات'} لتصل إلى:
                </p>
                <p className="text-emerald-700 font-semibold">
                  {nextAchievement.icon} {nextAchievement.title}
                </p>
              </div>
            </div>

            {/* قائمة الإنجازات */}
            <div className="bg-white rounded-lg border border-stone-200 p-6">
              <h3 className="font-semibold text-stone-800 mb-4 text-center">مستويات الإنجازات</h3>
              <div className="space-y-3">
                {achievements.map((achievement, idx) => {
                  const isCompleted = userPrayerCount >= achievement.count;
                  const isCurrent = achievement.count === nextAchievement.count;
                  
                  return (
                    <div 
                      key={idx}
                      className={`p-4 rounded-lg border-2 transition-all ${
                        isCompleted 
                          ? 'bg-emerald-50 border-emerald-500' 
                          : isCurrent
                            ? 'bg-amber-50 border-amber-500'
                            : 'bg-stone-50 border-stone-200'
                      }`}
                    >
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">{achievement.icon}</div>
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-1">
                            <span className="font-bold text-stone-800">{achievement.count}</span>
                            {isCompleted && <span className="text-emerald-600">✓</span>}
                            {isCurrent && <span className="text-amber-600">← الهدف الحالي</span>}
                          </div>
                          <p className="text-sm text-stone-600">{achievement.title}</p>
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>

            <div className="bg-gradient-to-br from-amber-50 to-amber-100 rounded-lg border border-amber-200 p-6 text-center">
              <p className="text-stone-700 leading-relaxed">
                "كل دعاء تدعوه يُكتب لك<br/>وتدعو لك الملائكة بمثله إن شاء الله"
              </p>
              <div className="text-3xl mt-3">🤲</div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // صفحة الأسئلة الشائعة
  if (currentPage === 'faq') {
    const faqs = [
      {
        q: 'كيف يعمل الموقع؟',
        a: 'تقوم بالتسجيل باسمك واسم والدتك، ثم يمكنك طلب الدعاء أو الدعاء للآخرين. ستصلك إشعارات كل 30 دقيقة عندما يطلب أحد الدعاء إن شاء الله.'
      },
      {
        q: 'لماذا نطلب اسم الأم؟',
        a: 'الدعاء بالاسم واسم الأم له قوة روحانية خاصة في كل الأديان، وهو أدق في التعريف بالشخص.'
      },
      {
        q: 'هل أحتاج لكتابة تفاصيل حاجتي؟',
        a: 'لا، احتفظ بحاجتك في قلبك. الله يعلم ما تريد، والمؤمنون يدعون لك بالخير العام.'
      },
      {
        q: 'كم مرة يمكنني طلب الدعاء؟',
        a: 'يمكنك طلب الدعاء في أي وقت تحتاجه. ننصح بالتباعد بين الطلبات لإعطاء الفرصة للمؤمنين للدعاء لك.'
      },
      {
        q: 'كيف أعرف أن دعائي استُجيب؟',
        a: 'بعد 24 ساعة من طلبك، سنسألك عن حالتك. إذا تيسرت حاجتك، سيتم إعلام كل من دعا لك بالبشرى إن شاء الله.'
      },
      {
        q: 'هل الموقع مجاني؟',
        a: 'نعم تماماً. المنصة مجانية للجميع. هدفنا نشر الخير والدعاء المشترك.'
      },
      {
        q: 'كيف أثبت التطبيق على موبايلي؟',
        a: 'عند زيارة الموقع، سيظهر لك خيار "تثبيت التطبيق" أو "إضافة إلى الشاشة الرئيسية" في متصفحك.'
      },
      {
        q: 'هل معلوماتي آمنة؟',
        a: 'نعم، نحن نحترم خصوصيتك. فقط الاسم واسم الأم يظهران للمؤمنين، وليس لدينا بياناتك الشخصية الأخرى.'
      },
      {
        q: 'هل يمكنني الدعاء لمتوفى؟',
        a: 'نعم، يوجد زر خاص للدعاء للمتوفين. يمكنك إدخال اسم المتوفى واسم والدته وصلة القرابة.'
      },
      {
        q: 'ماذا أفعل إذا لم تصلني إشعارات؟',
        a: 'تأكد من تثبيت التطبيق على شاشتك الرئيسية والسماح بالإشعارات في إعدادات المتصفح.'
      }
    ];

    return (
      <div className="min-h-screen bg-stone-50 flex flex-col">
        <IslamicBanner />
        <div className="bg-white border-b border-stone-200">
          <div className="max-w-2xl mx-auto px-4 py-4 flex items-center justify-between">
            <button onClick={() => setCurrentPage('home')} className="text-stone-600 hover:text-emerald-600">
              ← رجوع
            </button>
            <h1 className="text-lg font-semibold text-stone-800">الأسئلة الشائعة</h1>
            <div className="w-8"></div>
          </div>
        </div>
        <div className="flex-1 p-4">
          <div className="max-w-2xl mx-auto space-y-3">
            {faqs.map((faq, idx) => (
              <div key={idx} className="bg-white rounded-lg border border-stone-200 p-5">
                <h3 className="font-semibold text-stone-800 mb-2 flex items-start gap-2">
                  <HelpCircle className="w-5 h-5 text-emerald-600 flex-shrink-0 mt-0.5" />
                  {faq.q}
                </h3>
                <p className="text-stone-600 text-sm leading-relaxed mr-7">{faq.a}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  // الصفحة الرئيسية
  return (
    <div className="min-h-screen bg-stone-50 pb-20">
      <IslamicBanner />
      
      {/* الهيدر مع القائمة */}
      <div className="bg-white border-b border-stone-200 sticky top-0 z-10">
        <div className="max-w-2xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <button
              onClick={() => setShowMenu(!showMenu)}
              className="text-stone-600 hover:text-emerald-600 transition-colors"
            >
              <Menu className="w-6 h-6" />
            </button>
            <div className="text-center">
              <h1 className="text-lg font-semibold text-stone-800">منصة الدعاء الجماعي</h1>
              <p className="text-xs text-stone-600">مرحباً {user?.displayName}</p>
            </div>
            <button
              onClick={() => setCurrentPage('register')}
              className="text-stone-600 hover:text-emerald-600 transition-colors"
            >
              <Edit2 className="w-5 h-5" />
            </button>
          </div>
        </div>

        {/* القائمة المنسدلة */}
        {showMenu && (
          <div className="absolute top-full left-0 right-0 bg-white border-b border-stone-200 shadow-lg">
            <div className="max-w-2xl mx-auto">
              <button
                onClick={() => { setCurrentPage('home'); setShowMenu(false); }}
                className="w-full px-4 py-3 text-right hover:bg-stone-50 transition-colors border-b border-stone-100 flex items-center gap-3"
              >
                <Users className="w-5 h-5 text-emerald-600" />
                <span className="text-stone-700">الرئيسية</span>
              </button>
              <button
                onClick={() => { setCurrentPage('stats'); setShowMenu(false); }}
                className="w-full px-4 py-3 text-right hover:bg-stone-50 transition-colors border-b border-stone-100 flex items-center gap-3"
              >
                <TrendingUp className="w-5 h-5 text-emerald-600" />
                <span className="text-stone-700">الإحصائيات</span>
              </button>
              <button
                onClick={() => { setCurrentPage('achievements'); setShowMenu(false); }}
                className="w-full px-4 py-3 text-right hover:bg-stone-50 transition-colors border-b border-stone-100 flex items-center gap-3"
              >
                <Award className="w-5 h-5 text-emerald-600" />
                <span className="text-stone-700">الإنجازات</span>
              </button>
              <button
                onClick={() => { setCurrentPage('about'); setShowMenu(false); }}
                className="w-full px-4 py-3 text-right hover:bg-stone-50 transition-colors border-b border-stone-100 flex items-center gap-3"
              >
                <Heart className="w-5 h-5 text-emerald-600" />
                <span className="text-stone-700">من نحن</span>
              </button>
              <button
                onClick={() => { setCurrentPage('faq'); setShowMenu(false); }}
                className="w-full px-4 py-3 text-right hover:bg-stone-50 transition-colors flex items-center gap-3"
              >
                <HelpCircle className="w-5 h-5 text-emerald-600" />
                <span className="text-stone-700">الأسئلة الشائعة</span>
              </button>
            </div>
          </div>
        )}
      </div>

      <div className="max-w-2xl mx-auto px-4 py-6 space-y-4">
        {/* عداد المستخدمين */}
        <div className="bg-gradient-to-r from-emerald-50 to-emerald-100 border border-emerald-200 rounded-lg p-4 text-center">
          <p className="text-emerald-700 font-semibold text-lg">
            🌍 انضم إلى {totalUsers.toLocaleString()} مؤمن
          </p>
          <p className="text-emerald-600 text-sm">من حول العالم</p>
        </div>

        {/* رسالة تشجيعية عشوائية */}
        <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
          <p className="text-stone-700 text-sm leading-relaxed whitespace-pre-line text-center">
            {randomMessage}
          </p>
        </div>

        {/* أزرار الطلب */}
        <div className="grid grid-cols-1 gap-4">
          <button
            onClick={handleRequestPrayer}
            className="bg-emerald-600 hover:bg-emerald-700 text-white p-6 rounded-lg transition-colors"
          >
            <div className="text-center">
              <div className="text-3xl mb-2">🤲</div>
              <h3 className="text-lg font-semibold mb-2">احتاج دعاءكم</h3>
              <p className="text-sm opacity-90">احتفظ بحاجتك في قلبك ودع المؤمنين يشاركونك الدعاء</p>
            </div>
          </button>

          <button
            onClick={() => setShowDeceasedForm(true)}
            className="bg-stone-600 hover:bg-stone-700 text-white p-6 rounded-lg transition-colors"
          >
            <div className="text-center">
              <div className="text-3xl mb-2">🕊️</div>
              <h3 className="text-lg font-semibold mb-2">ادعوا لمتوفٍ عزيز</h3>
              <p className="text-sm opacity-90">ادعُ لروح من فارقنا واطلب من المؤمنين الدعاء له</p>
            </div>
          </button>
        </div>

        {/* نموذج المتوفى */}
        {showDeceasedForm && (
          <div className="bg-white p-6 rounded-lg border border-stone-200">
            <h3 className="text-lg font-semibold text-stone-800 mb-4 text-center">
              الدعاء لمن فارقنا
            </h3>
            
            <div className="space-y-4">
              <input
                type="text"
                value={deceasedForm.fullName}
                onChange={(e) => setDeceasedForm({...deceasedForm, fullName: e.target.value})}
                placeholder="الاسم الكامل للمتوفى"
                className="w-full px-4 py-2.5 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none"
              />
              
              <input
                type="text"
                value={deceasedForm.motherName}
                onChange={(e) => setDeceasedForm({...deceasedForm, motherName: e.target.value})}
                placeholder="اسم والدة المتوفى"
                className="w-full px-4 py-2.5 border border-stone-300 rounded-lg focus:border-emerald-500 focus:ring-1 focus:ring-emerald-500 focus:outline-none"
              />
              
              <div>
                <label className="block text-stone-700 font-medium mb-2 text-sm">
                  صلة القرابة (اختياري)
                </label>
                <div className="grid grid-cols-3 gap-2">
                  {['أب', 'أم', 'أخ', 'أخت', 'صديق', 'قريب'].map(rel => (
                    <button
                      key={rel}
                      onClick={() => setDeceasedForm({...deceasedForm, relation: rel})}
                      className={`py-2 px-3 rounded-lg text-sm font-medium transition-colors ${
                        deceasedForm.relation === rel
                          ? 'bg-emerald-600 text-white'
                          : 'bg-stone-100 text-stone-700 hover:bg-stone-200'
                      }`}
                    >
                      {rel}
                    </button>
                  ))}
                </div>
              </div>
              
              <div className="flex gap-2">
                <button
                  onClick={handleDeceasedPrayer}
                  className="flex-1 bg-stone-600 hover:bg-stone-700 text-white py-2.5 rounded-lg font-medium transition-colors"
                >
                  إرسال طلب الدعاء
                </button>
                <button
                  onClick={() => setShowDeceasedForm(false)}
                  className="px-6 bg-stone-200 hover:bg-stone-300 text-stone-700 py-2.5 rounded-lg font-medium transition-colors"
                >
                  إلغاء
                </button>
              </div>
            </div>
          </div>
        )}

        {/* إحصائية شخصية */}
        <div className="bg-white p-5 rounded-lg border border-stone-200 text-center">
          <p className="text-stone-600 text-sm mb-1">دعا لك اليوم</p>
          <p className="text-3xl font-semibold text-emerald-600">24</p>
          <p className="text-stone-500 text-sm">مؤمن</p>
        </div>

        {/* العداد التحفيزي المصغر */}
        <div className="bg-gradient-to-br from-emerald-50 to-amber-50 rounded-lg border border-emerald-200 p-5">
          <div className="text-center mb-3">
            <p className="text-stone-600 text-sm mb-1">دعواتك هذا الشهر</p>
            <p className="text-3xl font-bold text-emerald-700">{userPrayerCount}</p>
          </div>
          
          <div className="mb-3">
            <div className="w-full bg-emerald-200 rounded-full h-2.5 overflow-hidden">
              <div 
                className="bg-emerald-600 h-full transition-all duration-500"
                style={{width: `${Math.min((userPrayerCount / getNextAchievement().count) * 100, 100)}%`}}
              ></div>
            </div>
          </div>

          <p className="text-sm text-stone-600 text-center leading-relaxed">
            باقي <span className="font-bold text-emerald-700">{getNextAchievement().count - userPrayerCount}</span> {getNextAchievement().count - userPrayerCount === 1 ? 'دعاء' : 'دعوات'} لتصل إلى:<br/>
            <span className="text-emerald-700 font-semibold">"{getNextAchievement().title}"</span>
          </p>
        </div>

        {/* من يطلب دعاءنا */}
        <div className="bg-white rounded-lg border border-stone-200 overflow-hidden">
          <div className="bg-emerald-600 p-4 border-b border-emerald-700">
            <h3 className="text-white font-semibold text-center">
              من يطلب دعاءنا الآن
            </h3>
          </div>
          
          <div className="divide-y divide-stone-100">
            {requests.map(request => (
              <div key={request.id} className="p-5">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-1">
                      <span className="text-xl">{request.type === 'deceased' ? '🕊️' : '🤲'}</span>
                      <h4 className="font-semibold text-stone-800">
                        {request.type === 'deceased' 
                          ? `${request.deceasedName}${request.relation ? ` (${request.relation})` : ''}`
                          : request.userName
                        }
                      </h4>
                    </div>
                    <div className="flex items-center gap-3 text-sm text-stone-600 mb-2">
                      <span>{getTimeAgo(request.timestamp)}</span>
                      <span>•</span>
                      <span>دعا له {request.prayerCount}</span>
                    </div>
                    {!request.prayed && (
                      <p className="text-xs text-stone-500 italic">
                        💭 تخيل لو كنت مكان {request.type === 'deceased' ? request.deceasedName.split(' ')[0] : request.userName.split(' ')[0]}...
                      </p>
                    )}
                  </div>
                </div>
                
                {!request.prayed && (
                  <button
                    onClick={() => handleStartPraying(request)}
                    className={`w-full py-2.5 rounded-lg font-medium transition-colors ${
                      request.type === 'deceased'
                        ? 'bg-stone-600 hover:bg-stone-700 text-white'
                        : 'bg-emerald-600 hover:bg-emerald-700 text-white'
                    }`}
                  >
                    خذ لحظة وادعُ {request.type === 'deceased' ? 'له' : `لـ ${request.userName.split(' ')[0]}`} 🤲
                  </button>
                )}

                {request.prayed && (
                  <div className="bg-emerald-100 text-emerald-700 py-2.5 rounded-lg font-medium text-center">
                    ✓ دعوت {request.type === 'deceased' ? 'له' : `لـ ${request.userName.split(' ')[0]}`}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>

        {/* نافذة الدعاء */}
        {showPrayingFor && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg p-8 max-w-md w-full text-center">
              <div className="text-3xl mb-4">
                {showPrayingFor.type === 'deceased' ? '🕊️' : '🤲'}
              </div>
              <h3 className="text-xl font-semibold text-stone-800 mb-4">
                تدعو الآن {showPrayingFor.type === 'deceased' ? 'لـ' : 'لـ'}<br/>
                {showPrayingFor.type === 'deceased' ? showPrayingFor.deceasedName : showPrayingFor.userName}
              </h3>
              
              {prayingTimer > 0 ? (
                <div>
                  <p className="text-stone-600 mb-4">خذ نفساً عميقاً... وادعُ من قلبك</p>
                  <div className="text-amber-600 text-lg mb-4 leading-relaxed">
                    {showPrayingFor.type === 'deceased' 
                      ? `"اللهم ارحم ${showPrayingFor.deceasedName.split(' ')[0]} واغفر له وأكرم نزله"`
                      : `"اللهم يسّر أمور ${showPrayingFor.userName.split(' ')[0]} وفرّج كربه واجعل له مخرجاً"`
                    }
                  </div>
                  <div className="text-4xl font-bold text-emerald-600">
                    {prayingTimer}
                  </div>
                </div>
              ) : (
                <div>
                  <button
                    onClick={() => handleCompletePrayer(showPrayingFor.id)}
                    className="w-full bg-emerald-600 hover:bg-emerald-700 text-white py-3 rounded-lg font-medium transition-colors mb-3"
                  >
                    ✓ آمين - أكملت الدعاء
                  </button>
                  <p className="text-sm text-stone-600">
                    💚 يسّر الله أمورك لليسرى إن شاء الله
                  </p>
                </div>
              )}
            </div>
          </div>
        )}

        {/* بشائر اليوم */}
        <div className="bg-white rounded-lg border border-stone-200 overflow-hidden">
          <div className="bg-amber-500 p-4 border-b border-amber-600">
            <h3 className="text-white font-semibold text-center">
              بشائر اليوم
            </h3>
          </div>
          
          <div className="p-5 space-y-3">
            {blessings.map((blessing, idx) => (
              <div key={idx} className="flex items-center justify-between bg-amber-50 border border-amber-200 p-4 rounded-lg">
                <div>
                  <p className="font-semibold text-stone-800">✓ {blessing.name}</p>
                  <p className="text-sm text-stone-600">تيسرت حاجته إن شاء الله</p>
                </div>
                <p className="text-sm text-stone-600">دعا له {blessing.count}</p>
              </div>
            ))}
          </div>
        </div>

        {/* زر المشاركة */}
        <button className="w-full bg-sky-600 hover:bg-sky-700 text-white p-5 rounded-lg transition-colors flex items-center justify-center gap-3">
          <Share2 className="w-5 h-5" />
          <div className="text-center">
            <p className="font-semibold">شارك الموقع</p>
            <p className="text-sm opacity-90">كل مؤمن جديد يعني دعوات أكثر إن شاء الله</p>
          </div>
        </button>

        {/* Footer */}
        <div className="text-center text-sm text-stone-600 py-6 border-t border-stone-200">
          <p className="mb-2">منصة الدعاء الجماعي © 2025</p>
          <p>فكرة وتطوير: <span className="text-emerald-600 font-semibold">الغافقي 🌿</span></p>
        </div>
      </div>
    </div>
  );
};

export default DuaPlatform;

========== lib\supabase.js ==========
import { createClient } from '@supabase/supabase-js'

// هذه المتغيرات ستكون في ملف .env.local
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// دوال مساعدة لقاعدة البيانات

// 1. تسجيل مستخدم جديد
export async function registerUser(userData) {
  const { data, error } = await supabase
    .from('users')
    .insert([
      {
        full_name: userData.fullName,
        mother_name: userData.motherName,
        city: userData.city,
        show_full_name: userData.showFullName,
        created_at: new Date().toISOString()
      }
    ])
    .select()
    .single()

  if (error) throw error
  return data
}

// 2. طلب دعاء جديد
export async function createPrayerRequest(userId, type = 'need', deceasedData = null) {
  const requestData = {
    user_id: userId,
    type: type,
    status: 'active',
    prayer_count: 0,
    created_at: new Date().toISOString()
  }

  if (type === 'deceased' && deceasedData) {
    requestData.deceased_name = deceasedData.fullName
    requestData.deceased_mother = deceasedData.motherName
    requestData.relation = deceasedData.relation
  }

  const { data, error } = await supabase
    .from('prayer_requests')
    .insert([requestData])
    .select()
    .single()

  if (error) throw error
  return data
}

// 3. الحصول على كل الطلبات النشطة
export async function getActivePrayerRequests() {
  const { data, error } = await supabase
    .from('prayer_requests')
    .select(`
      *,
      users (
        full_name,
        mother_name,
        city,
        show_full_name
      )
    `)
    .eq('status', 'active')
    .order('created_at', { ascending: false })

  if (error) throw error
  return data
}

// 4. تسجيل دعاء
export async function recordPrayer(userId, requestId) {
  const { data, error } = await supabase
    .from('prayers')
    .insert([
      {
        user_id: userId,
        request_id: requestId,
        prayed_at: new Date().toISOString()
      }
    ])
    .select()
    .single()

  if (error) throw error

  // زيادة عداد الدعاء في الطلب
  await supabase.rpc('increment_prayer_count', { request_id: requestId })

  return data
}

// 5. تحديث حالة الطلب (تيسرت / لم تتيسر)
export async function updateRequestStatus(requestId, resolved) {
  const { data, error } = await supabase
    .from('prayer_requests')
    .update({
      status: resolved ? 'resolved' : 'active',
      resolved_at: resolved ? new Date().toISOString() : null
    })
    .eq('id', requestId)
    .select()
    .single()

  if (error) throw error
  return data
}

// 6. الحصول على إحصائيات المستخدم
export async function getUserStats(userId) {
  // عدد الدعوات التي قام بها
  const { count: prayerCount } = await supabase
    .from('prayers')
    .select('*', { count: 'exact', head: true })
    .eq('user_id', userId)

  // عدد من دعا له
  const { count: prayedForCount } = await supabase
    .from('prayers')
    .select('*', { count: 'exact', head: true })
    .eq('request_id', userId)

  return {
    totalPrayers: prayerCount || 0,
    prayedForMe: prayedForCount || 0
  }
}

// 7. الحصول على عدد المستخدمين الكلي
export async function getTotalUsers() {
  const { count, error } = await supabase
    .from('users')
    .select('*', { count: 'exact', head: true })

  if (error) throw error
  return count || 0
}

// 8. الحصول على البشائر (الطلبات التي تم حلها)
export async function getResolvedRequests(limit = 10) {
  const { data, error } = await supabase
    .from('prayer_requests')
    .select(`
      *,
      users (
        full_name,
        mother_name,
        show_full_name
      )
    `)
    .eq('status', 'resolved')
    .order('resolved_at', { ascending: false })
    .limit(limit)

  if (error) throw error
  return data
}

// 9. إرسال رسالة تواصل
export async function sendContactMessage(message, userId = null) {
  const { data, error } = await supabase
    .from('contact_messages')
    .insert([
      {
        message: message,
        user_id: userId,
        created_at: new Date().toISOString()
      }
    ])
    .select()
    .single()

  if (error) throw error
  return data
}

========== app\api\send-notification\route.js ==========
import { NextResponse } from 'next/server'
import webpush from 'web-push'

// إعداد Web Push
webpush.setVapidDetails(
  'mailto:haydar.cd@gmail.com',
  process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY,
  process.env.VAPID_PRIVATE_KEY
)

export async function POST(request) {
  try {
    const { subscription, title, body } = await request.json()

    const payload = JSON.stringify({
      title: title || 'منصة الدعاء الجماعي',
      body: body || 'لديك طلبات دعاء جديدة',
      icon: '/icon-192.png',
      badge: '/icon-192.png',
      url: '/'
    })

    await webpush.sendNotification(subscription, payload)

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('Error sending notification:', error)
    return NextResponse.json(
      { error: 'Failed to send notification' },
      { status: 500 }
    )
  }
}
